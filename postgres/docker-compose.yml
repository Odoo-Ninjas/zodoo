# manage-order: 500
volumes:
    odoo_postgres_volume:
services:
  postgres_change_permissions:
    image: ubuntu:22.04
    volumes:
      - $HOST_RUN_DIR:/opt/hostrundir
    entrypoint: ["/bin/sh","-c"]
    profiles:
      - auto
    command:
      - |
        mkdir -p /opt/hostrundir/postgres.socket
        chown 999:999 /opt/hostrundir/postgres.socket -R
        chown 999:999 /opt/hostrundir/postgres.logs -R
        echo Successfully setup ownership of socketfile

  postgres:
    build: 
      context: $ODOO_IMAGES/postgres
    restart: unless-stopped
    stdin_open: true
    command: ["postgres"]
    entrypoint: ["/run.sh"]
    profiles:
      - auto

    depends_on:
      - postgres_change_permissions
    volumes:
      - $DUMPS_PATH:/opt/dumps
      # volume mount safe (if odoo is mounted into virtual box)
      - $HOST_RUN_DIR/postgresout:/tmp/out
      # is created in after_compose
      - $HOST_RUN_DIR/pgcli_history:/root/.config/pgcli/history
      - odoo_postgres_volume:/var/lib/postgresql/data
      # /.s.PGSQL.5432
      - $HOST_RUN_DIR/postgres.socket:/var/run/postgresql
      - $HOST_RUN_DIR/postgres.logs:/logs
    environment:
      POSTGRES_HOST_AUTH_METHOD: password

      POSTGRES_PASSWORD: nobody_knows_what_it_is_like_to_be_the_db_admin
      PGDATA: /var/lib/postgresql/data/pgdata
      PGCLIRC: /var/lib/postgresql/.pgcli.config

    shm_size: ${POSTGRES_SHM_SIZE}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER --dbname=postgres"]
      interval: 1s
      timeout: 25s
      retries: 15